# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: design-system

  # A short description of the repository that will show up on GitHub
  description: mycompany design system and component library

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  # topics: templates, github, github-actions, workflows

  # Either `true` to make the repository private, or `false` to make it public.
  private: true # mycompany default: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: false # mycompany default: false

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false # mycompany default: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false # mycompany default: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true # mycompany default: false

  # Updates the default branch for this repository.
  default_branch: main # mycompany default: master

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true # mycompany default: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false # mycompany default: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true # mycompany default: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true # mycompany default: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true # mycompany default: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true # mycompany default: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: bug
    color: '#d73a4a'
    description: something is not working properly
  - name: documentation
    color: '#1D76DB'
    description: Pull requests that update documentation

  # hints
  - name: 'on hold'
    color: '#D93F0B'
    description: 'PR is on hold / DO NOT merge'

  # approval labels
  - name: approved
    color: '#1D76DB'
    description: fully approved
  - name: 'approvals 1/2'
    color: '#FFCC80'
    description: partially approved
  - name: 'approvals 2/2'
    color: '#0E8A16'
    description: fully approved

  # dependency labels
  - name: dependencies
    color: '#0366d6'
    description: dependencies
  - name: gh-actions
    color: '#000'
    description: Pull requests that update github-actions code

  # docker/deployment labels
  - name: deployment
    color: '#ededed'
    description: 'Pull requests that update the deployment folder / helm chart'
  - name: docker
    color: '#1D76DB'
    description: 'Pull requests that update Dockerfiles'

  # Language labels
  - name: 'css/sass'
    color: '#563d7c'
    description: Pull requests that update CSS/SASS code
  - name: js
    color: '#f1e05a'
    description: Pull requests that update JavaScript code
  - name: java
    color: '#b07219'
    description: Pull requests that update Java code
  - name: ruby
    color: '#701516'
    description: Pull requests that update Ruby code

  # Size labels
  - name: size/xs
    color: '#0E8A16'
  - name: size/s
    color: '#0E8A16'
  - name: size/m
    color: '#FFCC80'
  - name: size/l
    color: '#FFCC80'
  - name: size/xl
    color: '#ce2d2d'

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  []
  # - username: dariusch
  #   # Note: `permission` is only valid on organization-owned repositories.
  #   # The permission to grant the collaborator. Can be one of:
  #   # * `pull` - can pull, but not push to or administer this repository.
  #   # * `push` - can pull and push, but not administer this repository.
  #   # * `admin` - can pull, push and administer this repository.
  #   # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  #   # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #   permission: admin
  # - username: hubot
  #   permission: pull

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# The permission to grant the team. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
# * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
teams:
  # Admin
  - name: sre-team
    permission: admin
  # Push
  - name: frontend-team
    permission: push
  # Pull
  - name: engineering-team
    permission: push
  - name: product-owners
    permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        null
        # # The number of approvals required. (1-6)
        # required_approving_review_count: 1
        # # Dismiss approved reviews automatically when a new commit is pushed.
        # dismiss_stale_reviews: true
        # # Blocks merge until code owners have reviewed.
        # require_code_owner_reviews: true
        # # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        # # dismissal_restrictions:
        # #   users: []
        # #   teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks: null
      #   # Required. Require branches to be up to date before merging.
      #   strict: true
      #   # Required. The list of status checks to require in order to merge into this branch
      #   contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: false
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions: null
